@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@using System.Net.Http
@using System.Text.Json
@using System.Text
@using TheRestaurant.Contracts.Requests.Authentication
@using TheRestaurant.Presentation.Shared.DTO.Authentication
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager


<style>
    .form {
        padding-left: 25px;
    }
</style>

@if (Error)
{
    <p>@ErrorMessage</p>
}

<MudGrid>
    <MudItem xs="12">
        <MudText Typo="Typo.h5">
            Registrerera anställd som affärssystemsanvändare
        </MudText>
    </MudItem>

    <MudItem xs="12" Class="w-100">
        <EditForm Model="_register" Method="Post" OnValidSubmit="@Register_User">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label class="control-label col-md-2">Användarnamn</label>
                <div class="col-md-3">
                    <InputText class="form-control" @bind-Value="_register.Username" />
                    <ValidationMessage For="(() => _register.Username)" />
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Email</label>
                <div class="col-md-3">
                    <InputText class="form-control" @bind-Value="_register.Email" />
                    <ValidationMessage For="(() => _register.Email)" />
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Lösenord</label>
                <div class="col-md-3">
                    <InputText type=password class="form-control" @bind-Value="_register.Password" />
                    <ValidationMessage For="(() => _register.Password)" />
                </div>
            </div>


            <div class="form-group">
                <label class="control-label col-md-2">Repetera lösenord</label>
                <div class="col-md-3">
                    <InputText type=password class="form-control" @bind-Value="_register.RepeatPassword" />
                    <ValidationMessage For="(() => _register.RepeatPassword)" />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 py-3 col-md-3 text-right esh-button-actions">
                    <MudButton OnClick="@Register_User"
                               Variant="Variant.Filled"
                               Color="Color.Primary">
                        Registrera
                    </MudButton>
                </div>
            </div>
        </EditForm>
    </MudItem>

</MudGrid>
@code {
    private readonly RegisterValidation _register = new RegisterValidation();
    private bool Error;
    private string ErrorMessage;


    private async Task Register_User()
    {
        var request = new RegisterRequest(
            Email: _register.Email,
            Alias: _register.Username,
            Password: _register.Password);

        var json = JsonSerializer.Serialize(request);

        var apiUrl = "/auth/register";

        var content = new StringContent(json, Encoding.UTF8, "application/json");

        var response = await HttpClient.PostAsync(apiUrl, content);

        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/admin/employees/Index");
        }
        else
        {
            Error = true;
            ErrorMessage = "Det gick inte att registrera informationen.";
        }
    }

}
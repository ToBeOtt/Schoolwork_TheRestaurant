@using TheRestaurant.Presentation.Client.ClientServices
@using TheRestaurant.Presentation.Shared.DTO.Orders
@inject ClientOrderService OrderService
@inject IDialogService DialogService


<MudTable 
    Items="@ListOfActiveOrders" 
    Elevation="0"
    Dense=true 
    Hover=true 
    Bordered=false 
    Striped=true
    Class="w-100">

    <ToolBarContent>
        <MudText 
            Class="py-6 px-5"
            Typo="Typo.h5">
            Pågående ordrar
            </MudText>
        <MudSpacer />
    </ToolBarContent>

    <HeaderContent>
        <MudTh Class="fw-bold">Id</MudTh>
        <MudTh Class="fw-bold">Beställning gjord</MudTh>
        <MudTh Class="fw-bold">Ansvarig</MudTh>
        <MudTh></MudTh>
       
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.OrderNr</MudTd>
            <MudTd DataLabel="Id">@context.DateTimeOfOrder.ToShortTimeString()</MudTd>
             <MudTd>
                Ruben
            </MudTd>

            <MudTd>
                <MudSpacer />
            </MudTd>

            <MudTd>
                <MudButton FullWidth Variant="Variant.Filled" Color="Color.Secondary"
                        OnClick="@((e)=> CheckOutOrder(maxWidth ,context))">Markera som klar</MudButton>
         </MudTd>
     </RowTemplate>

 </MudTable>
 @code {
    private List<ActiveOrdersDto> ListOfActiveOrders = new();

    DialogOptions maxWidth = new DialogOptions() { MaxWidth = MaxWidth.Small, FullWidth = true };

    protected override async Task OnInitializedAsync()
    {
         ListOfActiveOrders = await OrderService.FetchListOfActiveOrders();
    }


    private async Task CheckOutOrder(DialogOptions options, ActiveOrdersDto order)
    {
        var parameters = new DialogParameters
        {
            { "ActiveOrder", order }
        };

        var dialog = await DialogService.ShowAsync<OrderCompleteDialog>("", parameters, options);
        var result = await dialog.Result;

        if (!result.Cancelled)
        {
            StateHasChanged();
        }

    }

}

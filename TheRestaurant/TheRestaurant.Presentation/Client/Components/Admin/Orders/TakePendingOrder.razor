@using TheRestaurant.Contracts.DTOs.OrderDTOs;
@using TheRestaurant.Presentation.Client.ClientServices;

@inject ISnackbar Snackbar
@inject HttpClient HttpClient
@inject ClientOrderService OrderService
@inject RoleService RoleService


<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h4">Du är på väg att påbörja hantering av en order</MudText>
    </TitleContent>
    <DialogContent>
        <MudText Align="Align.Center" Typo="Typo.h5">Är du säker på att vill påbörja hantering av order: <strong>@order.OrderNr</strong></MudText>
        <MudTable Items="@order.ProductAndQuantity" Dense=true Hover=true Bordered=false Striped=false Elevation="0">
            <ToolBarContent>

            </ToolBarContent>
           <HeaderContent>
               <MudTh>Namn</MudTh>
               <MudTh>Antal</MudTh>
               <MudTh>Pris</MudTh>
           </HeaderContent>
            <RowTemplate>
                <MudTd>@context.ProductName</MudTd>
                <MudTd>@context.Quantity</MudTd>
                <MudTd>9999</MudTd>
            </RowTemplate>

        </MudTable>

    </DialogContent>

    <DialogActions>
        <MudButton Class="ma-1" Variant="Variant.Filled" Color="Color.Success" DisableElevation FullWidth OnClick="ConfirmOrderTaken">Ja</MudButton>
         <MudButton Class="ma-1" Variant="Variant.Filled" Color="Color.Primary" DisableElevation FullWidth OnClick="Cancel">Avbryt</MudButton>
     </DialogActions>

 </MudDialog>

@code {

    private bool OrderProcessed;

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }
    
    [Parameter]
    public PendingOrderDto order { get; set; }

    private void Cancel()
    {
        
        Snackbar.Add("Hantering av order avbruten", Severity.Info);
        MudDialog.Cancel();
    }

    //Should be a async method when implemented
    private async Task ConfirmOrderTaken()
    {
        var test = await RoleService.GetRolesAsync();
        OrderProcessed = await OrderService.UpdateOrderStatus(order.OrderNr, "Processing");

        if (OrderProcessed)
            {
            Snackbar.Add($"Order {order.OrderNr} är påbörjad.", Severity.Success);
            MudDialog.Close(DialogResult.Ok(order.OrderNr));
                StateHasChanged();
            }
            else
            {
            Snackbar.Add($"Order {order.OrderNr} kunde inte markeras som färdig. Kontakta kassa-personal.", Severity.Error);
            MudDialog.Close(DialogResult.Ok(order.OrderNr));
            }
        
    }
}

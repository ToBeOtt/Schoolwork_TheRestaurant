@using TheRestaurant.Contracts.DTOs.OrderDTOs;

@* Replace with correct DTO *@
@using static TheRestaurant.Presentation.Client.Components.Admin.Orders.ViewPendingOrders;
@inject ISnackbar Snackbar
@inject HttpClient HttpClient


<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h4">Du är på väg att påbörja hantering av en order</MudText>
    </TitleContent>
    <DialogContent>
        <MudText Align="Align.Center" Typo="Typo.h5">Är du säker på att vill påbörja hantering av order: <strong>@order.OrderNr</strong></MudText>
        <MudTable Items="@order.ProductAndQuantity" Dense=true Hover=true Bordered=false Striped=false Elevation="0">
            <ToolBarContent>

            </ToolBarContent>
           <HeaderContent>
               <MudTh>Namn</MudTh>
               <MudTh>Antal</MudTh>
               <MudTh>Pris</MudTh>
           </HeaderContent>
            <RowTemplate>
                <MudTd>@context.ProductName</MudTd>
                <MudTd>@context.Quantity</MudTd>
                <MudTd>9999</MudTd>
            </RowTemplate>

        </MudTable>

    </DialogContent>

    <DialogActions>
        <MudButton Class="ma-1" Variant="Variant.Filled" Color="Color.Error" DisableElevation FullWidth OnClick="YesToTakeOrder">Ja</MudButton>
         <MudButton Class="ma-1" Variant="Variant.Filled" Color="Color.Primary" DisableElevation FullWidth OnClick="Cancel">Avbryt</MudButton>
     </DialogActions>

 </MudDialog>

@code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    //Replace with correct DTO
    [Parameter]
    public PendingOrderDto order { get; set; }

    private void Cancel()
    {
        
        Snackbar.Add("Hantering av order avbruten", Severity.Info);
        MudDialog.Cancel();
    }

    //Should be a async method when implemented
    private void YesToTakeOrder()
    {
        //call correct endpoint to update status



        //Example from allergy
        //HttpResponseMessage response = await HttpClient.DeleteAsync($"/api/allergy/delete/{allergy.Id}");

        // if (response.IsSuccessStatusCode)
        // {
        //     Snackbar.Add($"Allergi {allergy.Name} borttagen", Severity.Success);
        //     MudDialog.Close(DialogResult.Ok(allergy.Id));
        // }
        // else
        // {
        //     Snackbar.Add("Borttagning av allergi misslyckades", Severity.Error);
        //     MudDialog.Close(DialogResult.Ok(allergy.Id));
        // }
       
            // Snackbar.Add($"Hantering av order:{order.Id} påbörjad", Severity.Success);
            // MudDialog.Close(DialogResult.Ok(order.Id));
        
        
          

    }
}

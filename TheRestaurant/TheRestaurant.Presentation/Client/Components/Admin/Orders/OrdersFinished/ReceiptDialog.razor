@using TheRestaurant.Contracts.Requests.Order
@using TheRestaurant.Contracts.Responses.Orders
@using TheRestaurant.Presentation.Client.ClientServices
@using TheRestaurant.Presentation.Shared.DTO.Orders
@inject ISnackbar Snackbar
@inject ClientOrderService OrderService

<MudDialog>
    <TitleContent>

        <MudGrid>
            <MudItem xs="8">
                <MudText Class=" mx-5"
                         Typo="Typo.h6">
                    Order @DetailsId
                </MudText>
            </MudItem>

            <MudItem xs="4">
                <MudText Typo="Typo.h6">
                    @Receipt.OrderDate.ToShortDateString() - @Receipt.OrderDate.ToShortTimeString()
                </MudText>
            </MudItem>

            <MudItem xs="12">
                <MudText Typo="Typo.h6">
                    Hanterad av: @Receipt.EmployeeResponsible
                </MudText>
            </MudItem>

        </MudGrid>

    </TitleContent>
    <DialogContent>
        <MudTable Items="@Receipt.Products"
                  Hover=true
                  Bordered=false
                  Striped=false
                  Elevation="0">

            <HeaderContent>
                <MudTh>
                    <MudText Class="fw-bold"
                             Typo="Typo.subtitle1">
                        Köpta produkter
                    </MudText>
                </MudTh>
                <MudTh>
                    <MudText Class="fw-bold"
                             Typo="Typo.subtitle1">
                        Pris
                    </MudText>
                </MudTh>

                <MudTh>
                    <MudText Class="fw-bold"
                             Typo="Typo.subtitle1">
                        Varav Moms
                    </MudText>
                </MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.ProductName</MudTd>
                <MudTd>@context.Price</MudTd>
                <MudTd>@(context.Price - context.PriceWithoutVAT)</MudTd>
                </RowTemplate>

                <FooterContent>
                    <MudText Class="pt-8 pb-3 ml-2"
                             Typo="Typo.h6">
                        Total : @Receipt.Totalprice
                    </MudText>
                    <MudText Class="ml-2"
                             Typo="Typo.caption">
                        varav moms : @AddUpVat().ToString()
                    </MudText>
                    <MudTable Items="@DistinctVats()">
                        <ToolBarContent>
                            <MudText Align="Align.Start" Typo="Typo.caption">
                                Exkl moms: @(Receipt.Totalprice - AddUpVat())
                            </MudText>
                            <MudSpacer></MudSpacer>
                            <MudText Align="Align.End" Typo="Typo.caption">
                                Inkl moms: 
                            </MudText>
                        </ToolBarContent>
                        <HeaderContent>
                            <MudTh>
                            <MudText Typo="Typo.caption">
                                    Momssats
                                </MudText>
                            </MudTh>
                            <MudTh>
                                <MudText Typo="Typo.caption">
                                    Moms
                                </MudText>
                            </MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd></MudTd>
                            <MudTd>
                                <MudText Typo="Typo.caption">
                                    @((context - 1).ToString("P2"))
                            </MudText>
                        </MudTd>
                    </RowTemplate>
                </MudTable>
            </FooterContent>

        </MudTable>
    </DialogContent>

    <DialogActions>
        <MudButton Class="ma-1" Variant="Variant.Filled" Color="Color.Secondary" DisableElevation FullWidth OnClick="ConfirmPrintReceipt">Skriv ut</MudButton>
         <MudButton Class="ma-1" Variant="Variant.Filled" Color="Color.Primary" DisableElevation FullWidth OnClick="Cancel">Avbryt</MudButton>
     </DialogActions>

 </MudDialog>


 @code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public int DetailsId { get; set; }

    private GetReceiptResponse Receipt;
    

    protected override async Task OnInitializedAsync()
    {
        Receipt = await OrderService.FetchReceipt(DetailsId);
        
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private double AddUpVat()
    {
        double vatTotal = 0;

        foreach (var product in Receipt.Products)
        {
            vatTotal += product.Price - product.PriceWithoutVAT;
        }

        return Math.Round(vatTotal,2);
    }

    private List<double> DistinctVats()
    {
        List<double> vatList = new();

        vatList = Receipt.Products.Select(v => v.VAT).Distinct().ToList();

        return vatList;
    }


    private bool YesToReceipt;

    // Mock method to illustrate how a receipt might be fetched and then printed to a printer
    private async Task ConfirmPrintReceipt()
    {
        YesToReceipt = true;

        if (YesToReceipt)
        {
            Snackbar.Add("Kvittot skrivs ut..", Severity.Success);
            MudDialog.Close(DialogResult.Ok(Receipt));
            StateHasChanged();
        }
        else
        {
            Snackbar.Add("Kvittot kunde inte skrivas ut. Kontakta IT-support.", Severity.Error);
            MudDialog.Close(DialogResult.Ok(Receipt));
        }

    }
}


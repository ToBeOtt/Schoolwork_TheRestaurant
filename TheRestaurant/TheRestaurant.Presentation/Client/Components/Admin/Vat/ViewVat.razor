@using TheRestaurant.Contracts.DTOs
@using MudBlazor
@using TheRestaurant.Presentation.Client.Shared.Admin
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<AdminLayout>
    <AdminContent>
        <MudGrid Spacing="2" Justify="Justify.Center">

            <MudItem xs="12">

                <div class="px-3 mb-5">

                    <div class="d-flex justify-content-between mb-3">
                        <h3>Moms Lista</h3>

                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="NavigateToCreateVat">Create New</MudButton>
                    </div>

                    @if (vats != null && vats.Count > 0)
                    {
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Id</th>
                                    <th>Namn</th>
                                    <th>Adjustment</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var vat in vats)
                                {
                                    <tr>
                                        <td>@vat.Id</td>
                                        <td>@vat.Name</td>
                                        <td>@vat.Adjustment</td>
                                        <td>
                                            <MudButton Color="Color.Secondary" Variant="Variant.Outlined" OnClick="() => NavigateToEditVat(vat.Id)">Edit</MudButton>
                                            <MudButton Color="Color.Secondary" Variant="Variant.Outlined" OnClick="() => DeleteVat(vat.Id)">Radera</MudButton>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <MudText Typo="Typo.body1">Hittade ingen moms</MudText>
                    }

                </div>

            </MudItem>

        </MudGrid>
    </AdminContent>
</AdminLayout>

@code {
    private List<VATDto> vats;

    protected override async Task OnInitializedAsync()
    {
        vats = await HttpClient.GetFromJsonAsync<List<VATDto>>("admin/vat");
    }

    private void NavigateToCreateVat()
    {
        NavigationManager.NavigateTo($"/admin/vat/create");
    }

    private void NavigateToEditVat(int id)
    {
        NavigationManager.NavigateTo($"/admin/vat/edit/{id}");
    }
    private async void DeleteVat(int id)
    {
        var apiUrl = $"admin/vat/{id}";
        var response = await HttpClient.DeleteAsync(apiUrl);
        if (response.IsSuccessStatusCode)
        {
            vats = await HttpClient.GetFromJsonAsync<List<VATDto>>("admin/vat");
            StateHasChanged();
        }
        else
        {
            
        }

    }


}
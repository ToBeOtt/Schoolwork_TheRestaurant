@using TheRestaurant.Presentation.Client.ClientServices
@inject ClientDashboardServices DashboardServices

<MudDatePicker Date="@selectedDate" Label="Date" DateChanged="OnDateChange" MinDate="minDate" MaxDate="maxDate" />
<MudButton OnClick="LoadChartData">Load Chart Data</MudButton>

<MudChart ChartType="ChartType.Bar"
            ChartSeries="@Series"
            XAxisLabels="@XAxisLabels" 
            Width="100%"
            Height="700px">
>

</MudChart>


@* Snygga till data och displayingen*@

@code {
    public List<ChartSeries> Series = new List<ChartSeries>();
    public string[] XAxisLabels = { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "19", "20", "21", "22", "23", "00" };
    private DateTime? selectedDate;

    DateTime minDate = DateTime.Today.AddMonths(-1);
    DateTime maxDate = DateTime.Today;

    private void OnDateChange(DateTime? date)
    {
        selectedDate = date;
        StateHasChanged();
    }
    private async Task LoadChartData()
    {
        if (selectedDate.HasValue)
        {
            var orderStats = await DashboardServices.GetOrderStatsByUserChosenDate(selectedDate.Value);

            Series.Clear();
            double[] Data = new double[24];

            for (int i = 0; i< 23; i++)
            {
                var stat = orderStats.FirstOrDefault(stat => stat.Hour == i);

                if (stat != null)
                {
                    int index = orderStats.IndexOf(stat);
                Data[i - 1] = orderStats[index].OrderCount;
                }
                else
                {
                    Data[i] = 0;
                }
            }

            Series.Add(new ChartSeries
                {
                    Name = "Orders",
                    Data = Data
                });
        }
        else
        {
            // Handle case where the date is not selected
        }
    }
}


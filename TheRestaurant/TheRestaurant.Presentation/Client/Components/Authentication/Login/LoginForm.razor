@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@using System.IdentityModel.Tokens.Jwt
@using TheRestaurant.Contracts.Requests.Authentication
@using TheRestaurant.Presentation.Client.ClientServices
@using TheRestaurant.Presentation.Shared.DTO.Authentication
@inject AuthService AuthService
@inject NavigationManager Navigate
@inject ServerAuthenticationStateProvider authState

<style>
    .form {
        padding-left: 25px;
    }
</style>

@if (Error)
{
    <p>@ErrorMessage</p>
}

<div class="form">
    <EditForm Method="Post" Model="_login" OnSubmit=@Login_User>
        <DataAnnotationsValidator />

        <div class="form-group">
            <label class="control-label col-md-2">Mail</label>
            <div class="col-md-3">
                <InputText 
                    class="form-control"
                    @bind-Value="_login.Email"
                    />
                <ValidationMessage For="(() => _login.Email)" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Lösenord</label>
            <div class="col-md-3">
                <InputText type=password
                           class="form-control"
                           @bind-Value="_login.Password"
                />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 py-3 col-md-3 text-right esh-button-actions">
                <MudButton 
                    OnClick = "@Login_User"
                    Variant="Variant.Filled" 
                    Color="Color.Primary"
                    >
                    Logga in
                </MudButton>
            </div>
        </div>
    </EditForm>
</div>

@code {
    private readonly LoginDto _login = new LoginDto();

    private bool Error;
    private string ErrorMessage;
    private int NrOfTries;
    private int TriesRemaing = 3;

    private async Task Login_User()
    {
        TriesRemaing = 3;
        var request = new LoginRequest(
                    Email: _login.Email,
                    Password: _login.Password);

        if(!await AuthService.Login(request))
        {
            Error = true;
            NrOfTries++;
            TriesRemaing -= NrOfTries;
            ErrorMessage = "Felaktiga uppgifter, du har " + TriesRemaing + " försök kvar.";
        }
        else
        {
            authState.NotifyAuthenticationStateChanged();
            Navigate.NavigateTo("/");
        }

        if (NrOfTries >= 3)
        {
            Navigate.NavigateTo("/register");
        }
    }
}


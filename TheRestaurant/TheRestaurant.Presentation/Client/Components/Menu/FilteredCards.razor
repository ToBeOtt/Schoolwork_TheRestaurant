@using TheRestaurant.Presentation.Client.ClientServices
@using TheRestaurant.Presentation.Shared.DTO.Product
@inject ClientCartService CartService
@inject RoleService RoleService

@foreach (var prod in Products)
{
    <MudItem xs="3">
        <MudCard Elevation="3"
                 Class="mud-secondary">
            <div>
                <img class="product-image"
                     src="data:image/jpeg;base64,@prod.MenuPhoto"
                     alt="@prod.Name" />
            </div>

            <MudCardContent>
                <MudText Class="single-row-text"
                         Typo="Typo.h5"
                         Color="Color.Primary">
                    @prod.Name
                </MudText>

                <MudText Class="single-row-text"
                         Typo="Typo.body2"
                         Color="Color.Primary">
                    @prod.Description
                </MudText>
            </MudCardContent>

            <MudCardActions Class="px-5 py-2">
                <MudTooltip Text="@ErrorMessage">
                    <MudGrid>
                        <MudItem xs="6">
                             <MudButton 
                        Class="mr-6 pb-2)"
                        Variant="Variant.Filled"
                        Color="Color.Tertiary"
                        Disabled="@IsButtonDeactivated"
                        OnClick="@(() => AddItemToCart(prod.Id))"    
                        >
                        Beställ
                    </MudButton>
                        </MudItem>
                        <MudItem
                            xs="6">
                            <MudText 
                                Color="Color.Primary"
                                Typo="Typo.h6">
                                @prod.Price kr
                            </MudText>
                        </MudItem>
                    </MudGrid>
                </MudTooltip>
            </MudCardActions>

            @*  Details expansion info menu *@

            <MudExpansionPanels Elevation="0"
                                Class="expansion-panel">
                <MudExpansionPanel Text="Detaljer"
                                   Class="expansion-panel">
                    <MudText Typo="Typo.h6"
                             Color="Color.Secondary">
                        @prod.Name
                    </MudText>

                    <MudText Typo="Typo.body2"
                             Color="Color.Secondary">
                        @prod.Description
                    </MudText>

                    <br />

                    <MudText Typo="Typo.h6" Color="Color.Secondary">
                        Kategorier:
                    </MudText>
                    @if (prod.Category.Any())
                    {
                        <MudText Typo="Typo.body2" Class="fst-italic" Color="Color.Secondary">
                            <span>
                                @string.Join(", ", prod.Category)
                            </span>
                        </MudText>
                    }

                    <br />

                    <MudText Typo="Typo.h6" Color="Color.Secondary">
                        Allergener:
                    </MudText>
                    @if (prod.Allergen.Any())
                    {
                        <MudText Typo="Typo.body2" Class="fst-italic" Color="Color.Secondary">
                            <span>
                                @string.Join(", ", prod.Allergen)
                            </span>
                        </MudText>
                    }

                </MudExpansionPanel>
            </MudExpansionPanels>

        </MudCard>
    </MudItem>
}

@code {
    [Parameter]
    public List<ClientProductDto> Products { get; set; }

    public string ErrorMessage;
    public bool IsButtonDeactivated { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var roles = await RoleService.GetRolesAsync();
        if (roles.IsManager == true || roles.IsAdmin == true)
        {
            ErrorMessage = "Det går inte att lägga till en vara i kundkorgen som inloggad.";
            IsButtonDeactivated = true;
        }
    }

    private async Task AddItemToCart(int id)
    {  
        await CartService.AddItemToCartService(id);
    }

    
}
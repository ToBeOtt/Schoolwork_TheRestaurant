@page "/Admin/AddCategory"
@page "/Admin/EditCategory/{categoryId:int}"
@using TheRestaurant.Contracts.DTOs
@using MudBlazor
@using TheRestaurant.Presentation.Client.Components;
@using TheRestaurant.Presentation.Client.Shared.Admin
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<AdminLayout>
    <AdminContent>
        <MudGrid Spacing="2" Justify="Justify.Center">

            <MudItem xs="12">

                <div class="mx-5">
                    
                    <h3 class="mt-3">@title</h3>


                    <EditForm Model="@categoryDto" OnValidSubmit="Save">
                        <DataAnnotationsValidator />
                        <div class="">
                            <label>Name</label>
                            <div class="col-md-4">
                                <InputText @bind-Value="categoryDto.Name" class="form-control" />
                                <ValidationMessage For="() => categoryDto.Name" />
                            </div>
                        </div>
                        <div class="mt-3">
                            <div class="col-md-4">
                                <a class="btn btn-sm btn-danger" href="Admin/CategoryList">Annullera</a>
                                <input type="submit" value="@title" class="btn btn-sm btn-@btnColor" />
                            </div>
                        </div>
                    </EditForm>
                </div>

            </MudItem>

        </MudGrid>
    </AdminContent>
</AdminLayout>


@code {

    private string title = "Lägg till kategori";
    private string btnColor = "success";

    [Parameter]
    public int categoryId { get; set; }

    public CategoryDto? categoryDto = new();
}

@functions {
    protected override async Task OnInitializedAsync()
    {

        if (categoryId != 0)
        {
            title = "Redigera kategori";
            btnColor = "warning";
            categoryDto = await HttpClient.GetFromJsonAsync<CategoryDto>($"api/Category/{categoryId}");
        }

    }


    protected async Task Save()
    {
        if (categoryId == 0)
        {
            await HttpClient.PostAsJsonAsync("/api/Category", categoryDto);
        }
        else
        {
            categoryDto.Id = categoryId;
            await HttpClient.PutAsJsonAsync($"/api/Category/{categoryId}", categoryDto);
        }

        NavigationManager.NavigateTo("/Admin/CategoryList");
    }
}